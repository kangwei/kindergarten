<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.titian.core.dao.DevelopmentMapper" >
    <cache/>
  <resultMap id="BaseResultMap" type="com.titian.core.domain.Development" >
    <id column="file_id" property="fileId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="content_type" property="contentType" jdbcType="CHAR" />
    <result column="teacher" property="teacher" jdbcType="VARCHAR" />
    <result column="child" property="child" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    file_id, content, content_type, teacher, child, create_time, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_development_file
    where file_id = #{fileId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_development_file
    where file_id = #{fileId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.titian.core.domain.Development" >
    insert into t_development_file (file_id, content, content_type, 
      teacher, child, create_time, 
      status)
    values (#{fileId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{contentType,jdbcType=CHAR}, 
      #{teacher,jdbcType=VARCHAR}, #{child,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.titian.core.domain.Development" >
    insert into t_development_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fileId != null" >
        file_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="contentType != null" >
        content_type,
      </if>
      <if test="teacher != null" >
        teacher,
      </if>
      <if test="child != null" >
        child,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fileId != null" >
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null" >
        #{contentType,jdbcType=CHAR},
      </if>
      <if test="teacher != null" >
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="child != null" >
        #{child,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.titian.core.domain.Development" >
    update t_development_file
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null" >
        content_type = #{contentType,jdbcType=CHAR},
      </if>
      <if test="teacher != null" >
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="child != null" >
        child = #{child,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
    </set>
    where file_id = #{fileId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.titian.core.domain.Development" >
    update t_development_file
    set content = #{content,jdbcType=VARCHAR},
      content_type = #{contentType,jdbcType=CHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      child = #{child,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR}
    where file_id = #{fileId,jdbcType=INTEGER}
  </update>
</mapper>