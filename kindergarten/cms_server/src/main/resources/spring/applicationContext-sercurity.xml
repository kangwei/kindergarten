<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.xsd">
    <http auto-config="false" access-denied-page="/WEB-INF/views/accessDenied.jsp">
        <intercept-url pattern="/ext/**" filters="none" />
        <intercept-url pattern="/theme/**" filters="none" />
        <intercept-url pattern="/javascript/**" filters="none" />
        <intercept-url pattern="/kindeditor/**" filters="none" />
        <intercept-url pattern="/html/**" filters="none" />
        <intercept-url pattern="/login" filters="none"/>
        <form-login login-page="/login"
                    default-target-url="/" authentication-failure-url="/login"/>
        <logout logout-url="/logout"/>
        <session-management session-fixation-protection="none">
            <concurrency-control/>
        </session-management>
        <!-- 增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了，
        这个filter位于FILTER_SECURITY_INTERCEPTOR之前  -->
        <custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />
    </http>

    <!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性 -->
    <beans:bean id="myFilter" class="com.titian.cms.security.FilterSecurityInterceptor">
        <beans:property name="authenticationManager" ref="myAuthenticationManager" />
        <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源     -->
        <beans:property name="accessDecisionManager" ref="accessDecisionManager" />
        <beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" />
    </beans:bean>
    <!-- 资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问     -->
    <beans:bean id="mySecurityMetadataSource" init-method="loadResourceDefine"  class="com.titian.cms.security.InvocationSecurityMetadataSourceService">
    </beans:bean>

    <beans:bean id="accessDecisionManager" class="com.titian.cms.security.AccessDecisionManager"/>
    <beans:bean id="userDetailService" class="com.titian.cms.security.UserDetailService"/>
    <!-- 验证配置 ， 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
    <authentication-manager alias="myAuthenticationManager">
        <authentication-provider user-service-ref="userDetailService">
        </authentication-provider>
    </authentication-manager>
</beans:beans>